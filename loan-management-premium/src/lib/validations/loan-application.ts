import { z } from 'zod';

export const formSchema = z.object({
  applicantDetails: z.object({
    loanAccountNo: z.string().optional(),
    year: z.string().optional(),
    salutation: z.string().optional(),
    firstName: z.string().min(1, "First name is required"),
    middleName: z.string().optional(),
    lastName: z.string().min(1, "Last name is required"),
    mobileNo: z.string().regex(/^[0-9]{10}$/, "Mobile number must be 10 digits"),
    email: z.string().email("Invalid email address"),
    aadharNo: z.string().regex(/^[0-9]{12}$/, "Aadhar number must be 12 digits"),
    district: z.string().min(1, "District is required"),
    taluka: z.string().min(1, "Taluka is required"),
    villageCity: z.string().min(1, "Village/City is required"),
    pincode: z.string().regex(/^[0-9]{6}$/, "Pincode must be 6 digits"),
    presentAddress: z.string().min(1, "Present address is required"),
    permanentAddress: z.string().min(1, "Permanent address is required"),
    sameAsPermanent: z.boolean().default(false),
    industryName: z.string().min(1, "Industry name is required"),
    workingsheet: z.string().optional()
  }),
  loanDetails: z.object({
    workingCapital1: z.union([z.string(), z.number()]).optional(),
    katchaStructure1: z.union([z.string(), z.number()]).optional(),
    machinery1: z.union([z.string(), z.number()]).optional(),
    godown1: z.union([z.string(), z.number()]).optional(),
    grant1: z.union([z.string(), z.number()]).optional(),
    workingCapital2: z.union([z.string(), z.number()]).optional(),
    katchaStructure2: z.union([z.string(), z.number()]).optional(),
    machinery2: z.union([z.string(), z.number()]).optional(),
    godown2: z.union([z.string(), z.number()]).optional(),
    grant2: z.union([z.string(), z.number()]).optional(),
    totalAmount: z.number().min(1, "Total amount must be greater than 0"),
    totalInWords: z.string(),
    termLoanBudget1: z.union([z.string(), z.number()]).optional(),
    termLoanBudget2: z.union([z.string(), z.number()]).optional(),
  }),
  suretyDetails: z.object({
    suretyName: z.string().min(1, "Surety name is required"),
    relation: z.string().min(1, "Relation is required"),
    occupation: z.string().min(1, "Occupation is required"),
    designation: z.string().optional(),
    employer: z.string().optional(),
    workAddress: z.string().optional(),
    email: z.string().email("Invalid email address").optional(),
    mobileNo: z.string().regex(/^[0-9]{10}$/, "Mobile number must be 10 digits"),
    aadharNo: z.string().regex(/^[0-9]{12}$/, "Aadhar number must be 12 digits"),
    panNo: z.string().optional(),
    monthlySalary: z.string().optional(),
    otherIncome: z.string().optional(),
    existingLiabilities: z.string().optional(),
    propertyDetails: z.string().optional(),
    bankName: z.string().min(1, "Bank name is required"),
    bankBranch: z.string().min(1, "Bank branch is required"),
    accountNo: z.string().min(1, "Account number is required"),
    residentialAddress: z.string().min(1, "Residential address is required"),
    employmentDuration: z.string().optional(),
    bankerName: z.string().optional(),
    suretyLoan: z.string().optional(),
    district: z.string().min(1, "District is required"),
    taluka: z.string().min(1, "Taluka is required"),
    villageCity: z.string().min(1, "Village/City is required"),
    pincode: z.string().regex(/^[0-9]{6}$/, "Pincode must be 6 digits"),
    presentAddress: z.string().optional(),
    permanentAddress: z.string().optional(),
    sameAsPermanent: z.boolean().default(false)
  }),
  documents: z.object({
    aadharCard: z.any().optional(),
    panCard: z.any().optional(),
    bankStatement: z.any().optional(),
    salarySlip: z.any().optional(),
    photo: z.any().optional(),
    signature: z.any().optional()
  })
});

export type FormData = z.infer<typeof formSchema>;